// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: affairs/v1/external_affairs_api.proto

package affairs

import (
	context "context"
	fmt "fmt"
	v1 "{{.PkgName}}/core/proto/gen/common/v1"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("affairs/v1/external_affairs_api.proto", fileDescriptor_9b627489ba240d0d)
}

var fileDescriptor_9b627489ba240d0d = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xbf, 0x4a, 0x33, 0x41,
	0x14, 0xc5, 0x33, 0xcd, 0x57, 0x2c, 0x1f, 0x1a, 0x16, 0x44, 0x08, 0x1a, 0x30, 0x90, 0x76, 0x2e,
	0xab, 0xa5, 0x55, 0xd6, 0x2a, 0x20, 0x24, 0x5a, 0xda, 0x84, 0xd9, 0x71, 0x76, 0xbd, 0x38, 0x33,
	0x77, 0x9c, 0x19, 0x17, 0xf5, 0x0d, 0x7c, 0x2e, 0x1b, 0x4b, 0x1f, 0x41, 0xf6, 0x49, 0x64, 0xff,
	0x80, 0x9a, 0x22, 0xd8, 0x5d, 0xce, 0x39, 0xf7, 0xc0, 0xef, 0x24, 0x73, 0x51, 0x96, 0x02, 0x7d,
	0x80, 0x3a, 0x03, 0xf5, 0x14, 0x95, 0xb7, 0x42, 0x6f, 0x06, 0x6d, 0x23, 0x1c, 0x72, 0xe7, 0x29,
	0x52, 0x3a, 0x46, 0x53, 0x60, 0xe0, 0x83, 0xc1, 0xeb, 0x6c, 0x72, 0x28, 0xc9, 0x18, 0xb2, 0xed,
	0x9f, 0x51, 0xd1, 0xa3, 0x0c, 0x7d, 0x74, 0x72, 0xb2, 0xa3, 0xb1, 0x8f, 0x9c, 0xbe, 0xb1, 0xe4,
	0xff, 0xd2, 0xe4, 0x18, 0x16, 0xbd, 0x9c, 0xae, 0x92, 0xbd, 0x4b, 0x0c, 0x71, 0x65, 0x35, 0x5a,
	0xb5, 0xb4, 0x25, 0xa5, 0x47, 0xbc, 0xef, 0xe7, 0x75, 0xc6, 0x7f, 0x5b, 0xd7, 0xea, 0x61, 0x72,
	0xbc, 0xc3, 0x0d, 0x6e, 0x36, 0x4a, 0x8b, 0x64, 0xdc, 0xea, 0x17, 0x64, 0x6b, 0xe5, 0x83, 0xe8,
	0x2a, 0xe7, 0x7c, 0x1b, 0x82, 0x6f, 0x67, 0xda, 0xee, 0x3f, 0xc5, 0xc2, 0x6c, 0x94, 0xbf, 0xb2,
	0xf7, 0x66, 0xca, 0x3e, 0x9a, 0x29, 0xfb, 0x6c, 0xa6, 0x2c, 0x39, 0x90, 0x64, 0xf8, 0x8b, 0x0e,
	0x1c, 0xcd, 0x8f, 0xdf, 0x7c, 0x7f, 0x60, 0x5c, 0x38, 0x5c, 0xb7, 0xf0, 0x6b, 0x76, 0x73, 0x55,
	0x61, 0xbc, 0x7b, 0x2c, 0x5a, 0x06, 0x10, 0x1a, 0xcd, 0x33, 0x98, 0x8a, 0x20, 0x12, 0xe9, 0x7b,
	0x8c, 0x20, 0xcd, 0x2d, 0x44, 0x65, 0x9c, 0x16, 0x51, 0x05, 0xa8, 0xbc, 0x93, 0x20, 0xc9, 0x2b,
	0xe8, 0xa6, 0x83, 0x4a, 0x59, 0xf8, 0x1e, 0xf8, 0x7c, 0x38, 0x8b, 0x7f, 0x9d, 0x7b, 0xf6, 0x15,
	0x00, 0x00, 0xff, 0xff, 0x71, 0xc1, 0xbd, 0x8f, 0xcf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImBisAffairsClient is the client API for ImBisAffairs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImBisAffairsClient interface {
	// 获取最后在线时间信息
	ListOnlineInfo(ctx context.Context, in *v1.ListOnlineInfoReq, opts ...grpc.CallOption) (*v1.ListOnlineInfoResp, error)
	// 获取会话列表信息
	ListConversaInfo(ctx context.Context, in *ListConversaInfoReq, opts ...grpc.CallOption) (*ListConversaInfoRes, error)
}

type imBisAffairsClient struct {
	cc *grpc.ClientConn
}

func NewImBisAffairsClient(cc *grpc.ClientConn) ImBisAffairsClient {
	return &imBisAffairsClient{cc}
}

func (c *imBisAffairsClient) ListOnlineInfo(ctx context.Context, in *v1.ListOnlineInfoReq, opts ...grpc.CallOption) (*v1.ListOnlineInfoResp, error) {
	out := new(v1.ListOnlineInfoResp)
	err := c.cc.Invoke(ctx, "/imbis.affairs.v1.ImBisAffairs/ListOnlineInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imBisAffairsClient) ListConversaInfo(ctx context.Context, in *ListConversaInfoReq, opts ...grpc.CallOption) (*ListConversaInfoRes, error) {
	out := new(ListConversaInfoRes)
	err := c.cc.Invoke(ctx, "/imbis.affairs.v1.ImBisAffairs/ListConversaInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImBisAffairsServer is the server API for ImBisAffairs service.
type ImBisAffairsServer interface {
	// 获取最后在线时间信息
	ListOnlineInfo(context.Context, *v1.ListOnlineInfoReq) (*v1.ListOnlineInfoResp, error)
	// 获取会话列表信息
	ListConversaInfo(context.Context, *ListConversaInfoReq) (*ListConversaInfoRes, error)
}

// UnimplementedImBisAffairsServer can be embedded to have forward compatible implementations.
type UnimplementedImBisAffairsServer struct {
}

func (*UnimplementedImBisAffairsServer) ListOnlineInfo(ctx context.Context, req *v1.ListOnlineInfoReq) (*v1.ListOnlineInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOnlineInfo not implemented")
}
func (*UnimplementedImBisAffairsServer) ListConversaInfo(ctx context.Context, req *ListConversaInfoReq) (*ListConversaInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListConversaInfo not implemented")
}

func RegisterImBisAffairsServer(s *grpc.Server, srv ImBisAffairsServer) {
	s.RegisterService(&_ImBisAffairs_serviceDesc, srv)
}

func _ImBisAffairs_ListOnlineInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListOnlineInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImBisAffairsServer).ListOnlineInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.affairs.v1.ImBisAffairs/ListOnlineInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImBisAffairsServer).ListOnlineInfo(ctx, req.(*v1.ListOnlineInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImBisAffairs_ListConversaInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConversaInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImBisAffairsServer).ListConversaInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.affairs.v1.ImBisAffairs/ListConversaInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImBisAffairsServer).ListConversaInfo(ctx, req.(*ListConversaInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImBisAffairs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imbis.affairs.v1.ImBisAffairs",
	HandlerType: (*ImBisAffairsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOnlineInfo",
			Handler:    _ImBisAffairs_ListOnlineInfo_Handler,
		},
		{
			MethodName: "ListConversaInfo",
			Handler:    _ImBisAffairs_ListConversaInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "affairs/v1/external_affairs_api.proto",
}
