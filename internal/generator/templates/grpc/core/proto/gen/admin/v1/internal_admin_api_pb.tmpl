// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: admin/v1/internal_admin_api.proto

package admin

import (
	context "context"
	fmt "fmt"
	v1 "{{.PkgName}}/core/proto/gen/common/v1"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("admin/v1/internal_admin_api.proto", fileDescriptor_62f2148449fde6ee) }

var fileDescriptor_62f2148449fde6ee = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xbd, 0x4e, 0xf3, 0x30,
	0x14, 0x86, 0xbf, 0x2c, 0xdf, 0x90, 0xa1, 0x43, 0x84, 0x40, 0x0a, 0x10, 0x09, 0x2e, 0xc0, 0x47,
	0x85, 0x91, 0xa9, 0x05, 0x86, 0x4a, 0x94, 0x4a, 0x8c, 0x30, 0x54, 0xf9, 0x39, 0x0d, 0x47, 0xf8,
	0xf8, 0x18, 0xdb, 0x8d, 0xd4, 0x3b, 0x64, 0xe4, 0x12, 0x50, 0xef, 0x03, 0x09, 0xd5, 0x69, 0x87,
	0x2c, 0x4c, 0x6c, 0xf6, 0xfb, 0x1c, 0xbf, 0xd6, 0x63, 0xa7, 0x17, 0x65, 0xc3, 0x64, 0xa0, 0x1b,
	0x03, 0x99, 0x80, 0xce, 0x94, 0x7a, 0x19, 0x93, 0x65, 0x69, 0x49, 0x59, 0x27, 0x41, 0xb2, 0x11,
	0x71, 0x45, 0x5e, 0xc5, 0x58, 0x75, 0xe3, 0xfc, 0xa4, 0x16, 0x66, 0x89, 0x67, 0x18, 0x83, 0xa3,
	0xda, 0xf7, 0x83, 0xf9, 0x69, 0x2b, 0xd2, 0x6a, 0x84, 0xb8, 0xab, 0xd6, 0x2b, 0x40, 0xb6, 0x61,
	0xb3, 0x87, 0x47, 0xc3, 0xfe, 0x3e, 0xbd, 0xfa, 0x4e, 0xd2, 0x74, 0xc6, 0x53, 0xf2, 0x93, 0x5d,
	0x98, 0x2d, 0xd2, 0xd1, 0x03, 0xf9, 0xb0, 0x30, 0x9a, 0x0c, 0xce, 0xcc, 0x4a, 0xb2, 0x33, 0xd5,
	0xdf, 0xa6, 0xba, 0xb1, 0x1a, 0xa2, 0x27, 0x7c, 0xcf, 0xcf, 0x7f, 0xa1, 0xde, 0x5e, 0xfe, 0xcb,
	0x1e, 0xd3, 0x6c, 0xd2, 0x34, 0xb7, 0x62, 0x3a, 0x74, 0xbe, 0x9c, 0x23, 0x57, 0xe8, 0x7c, 0x56,
	0xa8, 0xa1, 0x92, 0x1a, 0x0e, 0xe4, 0xc7, 0xaa, 0x37, 0x51, 0x07, 0x13, 0x75, 0xbf, 0x33, 0xe9,
	0xfb, 0xee, 0x50, 0xff, 0x59, 0xdf, 0xf4, 0xe5, 0x63, 0x5b, 0x24, 0x9f, 0xdb, 0x22, 0xf9, 0xda,
	0x16, 0xc9, 0xf3, 0xbc, 0xa5, 0xf0, 0xba, 0xae, 0x76, 0x52, 0x50, 0x6a, 0xe2, 0x0d, 0x70, 0x2b,
	0x10, 0x44, 0xf4, 0x1b, 0x05, 0xa8, 0xb9, 0x81, 0x80, 0x6c, 0x75, 0x19, 0xd0, 0x43, 0xeb, 0x6c,
	0x0d, 0xb5, 0xb8, 0xfd, 0x73, 0x43, 0x8b, 0x06, 0x0e, 0x7f, 0x79, 0x13, 0x17, 0xd5, 0xff, 0x48,
	0xae, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x98, 0x43, 0x8e, 0xeb, 0xe4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImBisAdminClient is the client API for ImBisAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImBisAdminClient interface {
	// Get recent user online info
	ListOnlineInfo(ctx context.Context, in *v1.ListOnlineInfoReq, opts ...grpc.CallOption) (*v1.ListOnlineInfoResp, error)
	// Add conversa members
	AddConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error)
	// Delete conversa members
	DelConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error)
}

type imBisAdminClient struct {
	cc *grpc.ClientConn
}

func NewImBisAdminClient(cc *grpc.ClientConn) ImBisAdminClient {
	return &imBisAdminClient{cc}
}

func (c *imBisAdminClient) ListOnlineInfo(ctx context.Context, in *v1.ListOnlineInfoReq, opts ...grpc.CallOption) (*v1.ListOnlineInfoResp, error) {
	out := new(v1.ListOnlineInfoResp)
	err := c.cc.Invoke(ctx, "/imbis.admin.v1.ImBisAdmin/ListOnlineInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imBisAdminClient) AddConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/imbis.admin.v1.ImBisAdmin/AddConversaMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imBisAdminClient) DelConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/imbis.admin.v1.ImBisAdmin/DelConversaMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImBisAdminServer is the server API for ImBisAdmin service.
type ImBisAdminServer interface {
	// Get recent user online info
	ListOnlineInfo(context.Context, *v1.ListOnlineInfoReq) (*v1.ListOnlineInfoResp, error)
	// Add conversa members
	AddConversaMembers(context.Context, *ConversaMember) (*types.Empty, error)
	// Delete conversa members
	DelConversaMembers(context.Context, *ConversaMember) (*types.Empty, error)
}

// UnimplementedImBisAdminServer can be embedded to have forward compatible implementations.
type UnimplementedImBisAdminServer struct {
}

func (*UnimplementedImBisAdminServer) ListOnlineInfo(ctx context.Context, req *v1.ListOnlineInfoReq) (*v1.ListOnlineInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOnlineInfo not implemented")
}
func (*UnimplementedImBisAdminServer) AddConversaMembers(ctx context.Context, req *ConversaMember) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddConversaMembers not implemented")
}
func (*UnimplementedImBisAdminServer) DelConversaMembers(ctx context.Context, req *ConversaMember) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelConversaMembers not implemented")
}

func RegisterImBisAdminServer(s *grpc.Server, srv ImBisAdminServer) {
	s.RegisterService(&_ImBisAdmin_serviceDesc, srv)
}

func _ImBisAdmin_ListOnlineInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListOnlineInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImBisAdminServer).ListOnlineInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.admin.v1.ImBisAdmin/ListOnlineInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImBisAdminServer).ListOnlineInfo(ctx, req.(*v1.ListOnlineInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImBisAdmin_AddConversaMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversaMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImBisAdminServer).AddConversaMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.admin.v1.ImBisAdmin/AddConversaMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImBisAdminServer).AddConversaMembers(ctx, req.(*ConversaMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImBisAdmin_DelConversaMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversaMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImBisAdminServer).DelConversaMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.admin.v1.ImBisAdmin/DelConversaMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImBisAdminServer).DelConversaMembers(ctx, req.(*ConversaMember))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImBisAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imbis.admin.v1.ImBisAdmin",
	HandlerType: (*ImBisAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOnlineInfo",
			Handler:    _ImBisAdmin_ListOnlineInfo_Handler,
		},
		{
			MethodName: "AddConversaMembers",
			Handler:    _ImBisAdmin_AddConversaMembers_Handler,
		},
		{
			MethodName: "DelConversaMembers",
			Handler:    _ImBisAdmin_DelConversaMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin/v1/internal_admin_api.proto",
}
