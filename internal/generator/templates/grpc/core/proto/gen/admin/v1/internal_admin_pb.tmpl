// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: admin/v1/internal_admin.proto

package admin

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 会话成员
type ConversaMember struct {
	// Conversa Id
	ConversaId int64 `protobuf:"varint,1,opt,name=conversa_id,json=conversaId,proto3" json:"conversa_id,omitempty"`
	// Member's uid
	MemberUids           []int32  `protobuf:"varint,2,rep,packed,name=member_uids,json=memberUids,proto3" json:"member_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversaMember) Reset()         { *m = ConversaMember{} }
func (m *ConversaMember) String() string { return proto.CompactTextString(m) }
func (*ConversaMember) ProtoMessage()    {}
func (*ConversaMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cd90815cda00a5, []int{0}
}
func (m *ConversaMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConversaMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConversaMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConversaMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversaMember.Merge(m, src)
}
func (m *ConversaMember) XXX_Size() int {
	return m.Size()
}
func (m *ConversaMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversaMember.DiscardUnknown(m)
}

var xxx_messageInfo_ConversaMember proto.InternalMessageInfo

func (m *ConversaMember) GetConversaId() int64 {
	if m != nil {
		return m.ConversaId
	}
	return 0
}

func (m *ConversaMember) GetMemberUids() []int32 {
	if m != nil {
		return m.MemberUids
	}
	return nil
}

func init() {
	proto.RegisterType((*ConversaMember)(nil), "imbis.admin.v1.ConversaMember")
}

func init() { proto.RegisterFile("admin/v1/internal_admin.proto", fileDescriptor_61cd90815cda00a5) }

var fileDescriptor_61cd90815cda00a5 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x8d, 0x45, 0x0f, 0x5b, 0x28, 0x92, 0x53, 0x29, 0x98, 0x2e, 0x3d, 0x15, 0xa1, 0x19,
	0x8a, 0xe0, 0xc5, 0x5b, 0x7b, 0xf2, 0xd0, 0x4b, 0xc1, 0x8b, 0x1e, 0xc2, 0x26, 0xbb, 0xac, 0x43,
	0xb3, 0x99, 0xb0, 0xbb, 0xd9, 0xe2, 0x3f, 0xf4, 0xe8, 0x3f, 0x50, 0xf2, 0x4b, 0xc4, 0x8d, 0x95,
	0xde, 0x1e, 0xdf, 0xcc, 0x3c, 0xde, 0x3c, 0x76, 0x2b, 0xa4, 0xc1, 0x06, 0xc2, 0x1a, 0xb0, 0xf1,
	0xca, 0x36, 0xa2, 0x2e, 0x22, 0xc9, 0x5b, 0x4b, 0x9e, 0xd2, 0x09, 0x9a, 0x12, 0x5d, 0x3e, 0xa0,
	0xb0, 0x9e, 0x3d, 0x68, 0xf4, 0x6f, 0x5d, 0x99, 0x57, 0x64, 0xc0, 0x1c, 0xd1, 0x1f, 0xe8, 0x08,
	0x9a, 0x56, 0x71, 0x79, 0x15, 0x44, 0x8d, 0x52, 0x78, 0xb2, 0x0e, 0xfe, 0xe5, 0xe0, 0xb3, 0x08,
	0x6c, 0xb2, 0xa5, 0x26, 0x28, 0xeb, 0xc4, 0x4e, 0x99, 0x52, 0xd9, 0x74, 0xcb, 0xc6, 0xd5, 0x1f,
	0x29, 0x50, 0x4e, 0x13, 0x9e, 0x2c, 0x47, 0x9b, 0x45, 0xff, 0x35, 0xcf, 0x6e, 0x2e, 0xee, 0x66,
	0x28, 0xb9, 0xe9, 0x9c, 0xe7, 0x82, 0xb7, 0xe4, 0xd0, 0x63, 0x50, 0xfc, 0x37, 0x9f, 0x56, 0x76,
	0xcf, 0x4e, 0x67, 0x4f, 0x32, 0x9d, 0xb3, 0xb1, 0x89, 0x76, 0x45, 0x87, 0xd2, 0x4d, 0x2f, 0xf9,
	0x68, 0x79, 0xb5, 0x67, 0x03, 0x7a, 0x46, 0xe9, 0x36, 0xaf, 0x1f, 0x7d, 0x96, 0x7c, 0xf6, 0x59,
	0xf2, 0xdd, 0x67, 0xc9, 0xcb, 0xee, 0x2c, 0xbd, 0xa8, 0xd1, 0xbc, 0x83, 0xd1, 0x04, 0x9e, 0xa8,
	0x3e, 0xa0, 0x87, 0xca, 0x48, 0xf0, 0xca, 0xb4, 0xb5, 0xf0, 0xca, 0x81, 0xb6, 0x6d, 0x05, 0x15,
	0x59, 0x05, 0xf1, 0x03, 0xd0, 0xaa, 0x81, 0x53, 0x57, 0x8f, 0x51, 0x94, 0xd7, 0x71, 0x72, 0xff,
	0x13, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xdd, 0xe5, 0xde, 0x44, 0x01, 0x00, 0x00,
}

func (m *ConversaMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConversaMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConversaMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MemberUids) > 0 {
		dAtA2 := make([]byte, len(m.MemberUids)*10)
		var j1 int
		for _, num1 := range m.MemberUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintInternalAdmin(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x12
	}
	if m.ConversaId != 0 {
		i = encodeVarintInternalAdmin(dAtA, i, uint64(m.ConversaId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintInternalAdmin(dAtA []byte, offset int, v uint64) int {
	offset -= sovInternalAdmin(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ConversaMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConversaId != 0 {
		n += 1 + sovInternalAdmin(uint64(m.ConversaId))
	}
	if len(m.MemberUids) > 0 {
		l = 0
		for _, e := range m.MemberUids {
			l += sovInternalAdmin(uint64(e))
		}
		n += 1 + sovInternalAdmin(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovInternalAdmin(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozInternalAdmin(x uint64) (n int) {
	return sovInternalAdmin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ConversaMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInternalAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConversaMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConversaMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConversaId", wireType)
			}
			m.ConversaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInternalAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConversaId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowInternalAdmin
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MemberUids = append(m.MemberUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowInternalAdmin
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthInternalAdmin
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthInternalAdmin
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MemberUids) == 0 {
					m.MemberUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowInternalAdmin
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MemberUids = append(m.MemberUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipInternalAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInternalAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInternalAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInternalAdmin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInternalAdmin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInternalAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInternalAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthInternalAdmin
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupInternalAdmin
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthInternalAdmin
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthInternalAdmin        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInternalAdmin          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupInternalAdmin = fmt.Errorf("proto: unexpected end of group")
)
