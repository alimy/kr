// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common/v1/metrics.proto

package common

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ListOnlineInfoResp  查询最后在线时间等信息返回数据
type ListOnlineInfoResp struct {
	// 当前在线的用户id列表
	OnlineUids []int32 `protobuf:"varint,1,rep,packed,name=online_uids,json=onlineUids,proto3" json:"online_uids,omitempty"`
	// 用户id与最后在线时间map
	LastOnlineInfos      map[int32]*types.Timestamp `protobuf:"bytes,2,rep,name=last_online_infos,json=lastOnlineInfos,proto3" json:"last_online_infos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ListOnlineInfoResp) Reset()         { *m = ListOnlineInfoResp{} }
func (m *ListOnlineInfoResp) String() string { return proto.CompactTextString(m) }
func (*ListOnlineInfoResp) ProtoMessage()    {}
func (*ListOnlineInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_146faa70d059cbd1, []int{0}
}
func (m *ListOnlineInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOnlineInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOnlineInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOnlineInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOnlineInfoResp.Merge(m, src)
}
func (m *ListOnlineInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *ListOnlineInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOnlineInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListOnlineInfoResp proto.InternalMessageInfo

func (m *ListOnlineInfoResp) GetOnlineUids() []int32 {
	if m != nil {
		return m.OnlineUids
	}
	return nil
}

func (m *ListOnlineInfoResp) GetLastOnlineInfos() map[int32]*types.Timestamp {
	if m != nil {
		return m.LastOnlineInfos
	}
	return nil
}

// ListOnlineInfoReq 查询最后在线时间等信息参数
type ListOnlineInfoReq struct {
	// 用户id列表
	Uids []int32 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	// 会话id
	// 和用户id列表参数是互斥的，每次调用，只设置其中一个，如果两个都设置，优先解析会话id
	ConversaId           int64    `protobuf:"varint,2,opt,name=conversa_id,json=conversaId,proto3" json:"conversa_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOnlineInfoReq) Reset()         { *m = ListOnlineInfoReq{} }
func (m *ListOnlineInfoReq) String() string { return proto.CompactTextString(m) }
func (*ListOnlineInfoReq) ProtoMessage()    {}
func (*ListOnlineInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_146faa70d059cbd1, []int{1}
}
func (m *ListOnlineInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOnlineInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOnlineInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOnlineInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOnlineInfoReq.Merge(m, src)
}
func (m *ListOnlineInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *ListOnlineInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOnlineInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListOnlineInfoReq proto.InternalMessageInfo

func (m *ListOnlineInfoReq) GetUids() []int32 {
	if m != nil {
		return m.Uids
	}
	return nil
}

func (m *ListOnlineInfoReq) GetConversaId() int64 {
	if m != nil {
		return m.ConversaId
	}
	return 0
}

func init() {
	proto.RegisterType((*ListOnlineInfoResp)(nil), "common.v1.ListOnlineInfoResp")
	proto.RegisterMapType((map[int32]*types.Timestamp)(nil), "common.v1.ListOnlineInfoResp.LastOnlineInfosEntry")
	proto.RegisterType((*ListOnlineInfoReq)(nil), "common.v1.ListOnlineInfoReq")
}

func init() { proto.RegisterFile("common/v1/metrics.proto", fileDescriptor_146faa70d059cbd1) }

var fileDescriptor_146faa70d059cbd1 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4d, 0x6f, 0x13, 0x31,
	0x14, 0xc4, 0x09, 0x41, 0xc2, 0x7b, 0xa0, 0xb5, 0x2a, 0x11, 0xed, 0x21, 0x59, 0xe5, 0x14, 0x21,
	0xd5, 0xa6, 0x41, 0x42, 0x08, 0x6e, 0xa9, 0x38, 0x54, 0xaa, 0xd4, 0x6a, 0x05, 0x17, 0x0e, 0x8d,
	0x9c, 0x5d, 0x67, 0x79, 0x8a, 0xed, 0xb7, 0xac, 0xdf, 0x6e, 0x15, 0x8e, 0xfc, 0x3a, 0x8e, 0xfc,
	0x03, 0x50, 0xfe, 0x03, 0x77, 0xd4, 0xdd, 0x26, 0x84, 0x8f, 0xdb, 0x68, 0x66, 0x9e, 0x3d, 0x1e,
	0x3f, 0xfe, 0x34, 0x43, 0xe7, 0xd0, 0xab, 0xe6, 0x4c, 0x39, 0x43, 0x15, 0x64, 0x41, 0x96, 0x15,
	0x12, 0x8a, 0xc7, 0x9d, 0x20, 0x9b, 0xb3, 0x78, 0x5c, 0x20, 0x16, 0xd6, 0xa8, 0x56, 0x58, 0xd6,
	0x2b, 0x45, 0xe0, 0x4c, 0x20, 0xed, 0xca, 0xce, 0x1b, 0xbf, 0x2c, 0x80, 0x3e, 0xd6, 0x4b, 0x99,
	0xa1, 0x53, 0xee, 0x16, 0x68, 0x8d, 0xb7, 0xaa, 0xc0, 0xd3, 0x56, 0x3c, 0x6d, 0xb4, 0x85, 0x5c,
	0x13, 0x56, 0x41, 0xed, 0x61, 0x37, 0x37, 0xf9, 0xc9, 0xb8, 0xb8, 0x84, 0x40, 0x57, 0xde, 0x82,
	0x37, 0x17, 0x7e, 0x85, 0xa9, 0x09, 0xa5, 0x18, 0xf3, 0x08, 0x5b, 0x66, 0x51, 0x43, 0x1e, 0x86,
	0x2c, 0xe9, 0x4f, 0x07, 0x29, 0xef, 0xa8, 0xf7, 0x90, 0x07, 0x71, 0xc3, 0x8f, 0xad, 0x0e, 0xb4,
	0xb8, 0x77, 0x81, 0x5f, 0x61, 0x18, 0xf6, 0x92, 0xfe, 0x34, 0x9a, 0xcd, 0xe4, 0x3e, 0xb7, 0xfc,
	0xf7, 0x68, 0x79, 0xa9, 0x0f, 0xa9, 0xf0, 0xd6, 0x53, 0xb5, 0x49, 0x9f, 0xd8, 0x3f, 0xd9, 0xf8,
	0x86, 0x9f, 0xfc, 0xcf, 0x28, 0x8e, 0x78, 0x7f, 0x6d, 0x36, 0x43, 0x96, 0xb0, 0xe9, 0x20, 0xbd,
	0x83, 0xe2, 0x39, 0x1f, 0x34, 0xda, 0xd6, 0x66, 0xd8, 0x4b, 0xd8, 0x34, 0x9a, 0xc5, 0xb2, 0xab,
	0x4a, 0xee, 0xaa, 0x92, 0xef, 0x76, 0x55, 0xa5, 0x9d, 0xf1, 0x75, 0xef, 0x15, 0x9b, 0x58, 0x7e,
	0xfc, 0x77, 0xb6, 0x4f, 0x42, 0xf0, 0x87, 0x07, 0xcf, 0x6d, 0xb1, 0x38, 0xe7, 0x51, 0x86, 0xbe,
	0x31, 0x55, 0xd0, 0x0b, 0xc8, 0xdb, 0x4b, 0xfa, 0xf3, 0xc9, 0xf6, 0xfb, 0x78, 0x74, 0xf4, 0xe0,
	0x59, 0x0c, 0x79, 0xe2, 0xea, 0x40, 0x89, 0x4e, 0x4a, 0x0c, 0x40, 0xd0, 0x98, 0x04, 0x3c, 0x99,
	0xc2, 0x54, 0x29, 0xdf, 0x8d, 0x5d, 0xe4, 0xf3, 0x2f, 0xec, 0xeb, 0x76, 0xc4, 0xbe, 0x6d, 0x47,
	0xec, 0xc7, 0x76, 0xc4, 0xf8, 0x49, 0x86, 0x4e, 0x7e, 0xb6, 0x41, 0x82, 0xfb, 0xdd, 0xd5, 0x3c,
	0x3a, 0x6f, 0xe1, 0xf5, 0x5d, 0xee, 0x6b, 0xf6, 0xe1, 0xea, 0xe0, 0x47, 0xb5, 0x05, 0xb7, 0x51,
	0xae, 0x40, 0x45, 0x88, 0x76, 0x0d, 0xa4, 0x32, 0x97, 0x2b, 0x32, 0xae, 0xb4, 0x9a, 0x4c, 0x50,
	0x45, 0x55, 0x66, 0x2a, 0xc3, 0xea, 0x7e, 0x41, 0x54, 0x61, 0xbc, 0xda, 0x6f, 0xd5, 0x9b, 0x0e,
	0x2d, 0x1f, 0xb5, 0xda, 0x8b, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0x79, 0xe7, 0x65, 0x70,
	0x02, 0x00, 0x00,
}

func (m *ListOnlineInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOnlineInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOnlineInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LastOnlineInfos) > 0 {
		for k := range m.LastOnlineInfos {
			v := m.LastOnlineInfos[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintMetrics(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintMetrics(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintMetrics(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.OnlineUids) > 0 {
		dAtA3 := make([]byte, len(m.OnlineUids)*10)
		var j2 int
		for _, num1 := range m.OnlineUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA3[j2] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j2++
			}
			dAtA3[j2] = uint8(num)
			j2++
		}
		i -= j2
		copy(dAtA[i:], dAtA3[:j2])
		i = encodeVarintMetrics(dAtA, i, uint64(j2))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListOnlineInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOnlineInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOnlineInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConversaId != 0 {
		i = encodeVarintMetrics(dAtA, i, uint64(m.ConversaId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Uids) > 0 {
		dAtA5 := make([]byte, len(m.Uids)*10)
		var j4 int
		for _, num1 := range m.Uids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintMetrics(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetrics(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetrics(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListOnlineInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OnlineUids) > 0 {
		l = 0
		for _, e := range m.OnlineUids {
			l += sovMetrics(uint64(e))
		}
		n += 1 + sovMetrics(uint64(l)) + l
	}
	if len(m.LastOnlineInfos) > 0 {
		for k, v := range m.LastOnlineInfos {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovMetrics(uint64(l))
			}
			mapEntrySize := 1 + sovMetrics(uint64(k)) + l
			n += mapEntrySize + 1 + sovMetrics(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOnlineInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Uids) > 0 {
		l = 0
		for _, e := range m.Uids {
			l += sovMetrics(uint64(e))
		}
		n += 1 + sovMetrics(uint64(l)) + l
	}
	if m.ConversaId != 0 {
		n += 1 + sovMetrics(uint64(m.ConversaId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMetrics(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetrics(x uint64) (n int) {
	return sovMetrics(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ListOnlineInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetrics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOnlineInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOnlineInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMetrics
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OnlineUids = append(m.OnlineUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMetrics
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMetrics
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMetrics
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OnlineUids) == 0 {
					m.OnlineUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMetrics
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OnlineUids = append(m.OnlineUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlineUids", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastOnlineInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetrics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetrics
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetrics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastOnlineInfos == nil {
				m.LastOnlineInfos = make(map[int32]*types.Timestamp)
			}
			var mapkey int32
			var mapvalue *types.Timestamp
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMetrics
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMetrics
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMetrics
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthMetrics
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthMetrics
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &types.Timestamp{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipMetrics(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthMetrics
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.LastOnlineInfos[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetrics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMetrics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMetrics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOnlineInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetrics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOnlineInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOnlineInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMetrics
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Uids = append(m.Uids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMetrics
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMetrics
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMetrics
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Uids) == 0 {
					m.Uids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMetrics
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Uids = append(m.Uids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Uids", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConversaId", wireType)
			}
			m.ConversaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetrics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConversaId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetrics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMetrics
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMetrics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetrics(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetrics
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetrics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetrics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetrics
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetrics
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetrics
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetrics        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetrics          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetrics = fmt.Errorf("proto: unexpected end of group")
)
