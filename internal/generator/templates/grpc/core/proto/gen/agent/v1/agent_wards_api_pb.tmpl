// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: agent/v1/agent_wards_api.proto

package agent

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("agent/v1/agent_wards_api.proto", fileDescriptor_675f6a3265118b5f) }

var fileDescriptor_675f6a3265118b5f = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xc9, 0xc2, 0x50, 0x21, 0x24, 0x32, 0x30, 0x04, 0x29, 0x03, 0x7b, 0x7d, 0x2a, 0x48,
	0x2c, 0x4c, 0xe5, 0xcf, 0xc0, 0x50, 0x56, 0x24, 0x18, 0x2a, 0x27, 0x39, 0x8c, 0x55, 0x5f, 0x2e,
	0xb2, 0xaf, 0x89, 0xfa, 0x52, 0x3c, 0x07, 0x23, 0x8f, 0x80, 0xf2, 0x24, 0x28, 0x4e, 0x8b, 0xda,
	0x9d, 0xed, 0xb3, 0xbe, 0xcf, 0xf7, 0xfd, 0xec, 0x9b, 0xe4, 0xda, 0x60, 0x2d, 0xd0, 0xce, 0x20,
	0x8a, 0x65, 0xa7, 0x7d, 0x15, 0x96, 0xba, 0xb1, 0xaa, 0xf1, 0x2c, 0x9c, 0x9e, 0x5a, 0x2a, 0x6c,
	0x50, 0xd1, 0x54, 0xed, 0x2c, 0x3b, 0xdb, 0x8b, 0x8d, 0x91, 0xec, 0xc2, 0x30, 0x1b, 0x87, 0x10,
	0x4f, 0xc5, 0xfa, 0x1d, 0x90, 0x1a, 0xd9, 0x6c, 0xcd, 0x1b, 0x63, 0xe5, 0x63, 0x5d, 0xa8, 0x92,
	0x09, 0xa8, 0xb3, 0xb2, 0xe2, 0x0e, 0x0c, 0x4f, 0xa3, 0x39, 0x6d, 0xb5, 0xb3, 0x95, 0x16, 0xf6,
	0x01, 0xfe, 0xe4, 0x78, 0xef, 0xea, 0x33, 0x99, 0x9c, 0x3c, 0xd1, 0x7c, 0x28, 0x7b, 0x19, 0xba,
	0xd2, 0xe7, 0x49, 0x3a, 0xaf, 0xaa, 0x7b, 0xae, 0x5b, 0xf4, 0x41, 0x2f, 0x90, 0x0a, 0xf4, 0x21,
	0xcd, 0xd5, 0x21, 0x9f, 0x3a, 0x0c, 0x64, 0xe7, 0x6a, 0x84, 0x53, 0x3b, 0x38, 0xf5, 0x38, 0xc0,
	0x5d, 0x1e, 0x0d, 0xf3, 0x1e, 0xd0, 0xfd, 0xdb, 0xbc, 0xbb, 0xb7, 0xaf, 0x3e, 0x4f, 0xbe, 0xfb,
	0x3c, 0xf9, 0xe9, 0xf3, 0xe4, 0x75, 0xb1, 0xf7, 0x6c, 0xed, 0x2c, 0x6d, 0x80, 0x0c, 0x83, 0x30,
	0xbb, 0x95, 0x15, 0x28, 0xa9, 0x02, 0x41, 0x6a, 0x9c, 0x16, 0x0c, 0x60, 0x7c, 0x53, 0x42, 0xc9,
	0x7e, 0xfb, 0x83, 0x60, 0xb0, 0x86, 0xdd, 0x56, 0x6e, 0xa3, 0x28, 0x8e, 0xa3, 0x73, 0xfd, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x54, 0xac, 0x6e, 0xe0, 0xae, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImAgentWardsClient is the client API for ImAgentWards service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImAgentWardsClient interface {
	// Add conversa members
	AddConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error)
	// Delete conversa members
	DelConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error)
}

type imAgentWardsClient struct {
	cc *grpc.ClientConn
}

func NewImAgentWardsClient(cc *grpc.ClientConn) ImAgentWardsClient {
	return &imAgentWardsClient{cc}
}

func (c *imAgentWardsClient) AddConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/imbis.agent.v1.ImAgentWards/AddConversaMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imAgentWardsClient) DelConversaMembers(ctx context.Context, in *ConversaMember, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/imbis.agent.v1.ImAgentWards/DelConversaMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImAgentWardsServer is the server API for ImAgentWards service.
type ImAgentWardsServer interface {
	// Add conversa members
	AddConversaMembers(context.Context, *ConversaMember) (*types.Empty, error)
	// Delete conversa members
	DelConversaMembers(context.Context, *ConversaMember) (*types.Empty, error)
}

// UnimplementedImAgentWardsServer can be embedded to have forward compatible implementations.
type UnimplementedImAgentWardsServer struct {
}

func (*UnimplementedImAgentWardsServer) AddConversaMembers(ctx context.Context, req *ConversaMember) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddConversaMembers not implemented")
}
func (*UnimplementedImAgentWardsServer) DelConversaMembers(ctx context.Context, req *ConversaMember) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelConversaMembers not implemented")
}

func RegisterImAgentWardsServer(s *grpc.Server, srv ImAgentWardsServer) {
	s.RegisterService(&_ImAgentWards_serviceDesc, srv)
}

func _ImAgentWards_AddConversaMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversaMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImAgentWardsServer).AddConversaMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.agent.v1.ImAgentWards/AddConversaMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImAgentWardsServer).AddConversaMembers(ctx, req.(*ConversaMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImAgentWards_DelConversaMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConversaMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImAgentWardsServer).DelConversaMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imbis.agent.v1.ImAgentWards/DelConversaMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImAgentWardsServer).DelConversaMembers(ctx, req.(*ConversaMember))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImAgentWards_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imbis.agent.v1.ImAgentWards",
	HandlerType: (*ImAgentWardsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddConversaMembers",
			Handler:    _ImAgentWards_AddConversaMembers_Handler,
		},
		{
			MethodName: "DelConversaMembers",
			Handler:    _ImAgentWards_DelConversaMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent/v1/agent_wards_api.proto",
}
