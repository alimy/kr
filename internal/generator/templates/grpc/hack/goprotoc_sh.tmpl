#!/bin/bash

OUTPATH="$GOPATH/src"
INCLUDES="-I. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf"
PTYPES="Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/type.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/empty.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/api.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/field_mask.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/source_context.proto=github.com/gogo/protobuf/types"
OPTIONS="$INCLUDES --gogofast_out=plugins=grpc,$PTYPES:$OUTPATH --govalidators_out=gogoimport=true,$PTYPES:$OUTPATH"

function _gprotoc() {
    for arg in "$@"; do
      if [ -d "$arg" ]; then
        dirProto=$arg
      else
        dirProto=$(dirname "$arg")
      fi
      local OPTS=$OPTIONS
      if [ "$dirProto" != "." ]; then
        OPTS="$OPTIONS -I $dirProto"
      fi
      for fileProto in $(find "$dirProto"/*.proto -print0 | xargs -0); do
          echo "protoc $OPTS $fileProto"
          protoc $OPTS $fileProto
      done
    done
}

_gprotoc "$@"

