package rpcx

import (
	"context"
	"time"

	"{{.PkgName}}/internal/insecure"
	"github.com/sirupsen/logrus"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials"
)

// grpc method name
var (
	_grpcMethods = grpcMethods{
		"ImBisAffairs.ListOnlineInfo": listOnlineInfo,
	}
)

// grpcMethods grpc method map
type grpcMethods map[string]func(context.Context, *grpc.ClientConn, string)

// Run just run a grpc method
func Call(target string, method string, args string) {
	m, exist := _grpcMethods[method]
	if !exist {
		logrus.Warnf("not find method name of %s", method)
	}
	ctx, cancel := context.WithTimeout(context.Background(), 120*time.Second)
	defer cancel()

	conn, err := grpc.DialContext(ctx, target,
		grpc.WithTransportCredentials(credentials.NewClientTLSFromCert(insecure.CertPool, "")),
	)
	if err != nil {
		logrus.Fatalln("Failed to dial server:", err)
	}
	defer conn.Close()

	m(ctx, conn, args)
}
